{
	"version": "2.0.0",
	"tasks": [
		{
			"label": "02 - run gongxsd -unmarshallFromCode=stage.go -marshallOnCommit=stage",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/go/cmd/gongxsd"
			},
			"command": "go",
			"args": [
				"run",
				"main.go",
				"-diagrams",
				"-unmarshallFromCode=stage.go",
				"-marshallOnCommit=stage"
			],
			"group": "build"
		},
		{
			"label": "02 - run gongxsd w/o diagrams",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/go/cmd/gongxsd"
			},
			"command": "go",
			"args": [
				"run",
				".",
				"-diagrams=false",
				"--unmarshall=stage",
				"-marshallOnCommit=stage"
			],
			"group": "build"
		},
		{
			"label": "03 - lsof -i tcp:8080 ",
			"type": "shell",
			"command": "lsof -i tcp:8080 ",
			"group": "build"
		},
		{
			"label": "03 - ng build",
			"type": "shell",
			"command": "cd ng-github.com-fullstack-lang-gongxsd; ng build",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "04 - ng serve --host=127.0.0.1",
			"type": "shell",
			"command": "cd ng-github.com-fullstack-lang-gongxsd; ng serve --host=127.0.0.1",
			"group": "build",
			"problemMatcher": []
		},
		{
			"label": "01 - gongc gongxsd",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/go/models"
			},
			"command": "gongc",
			"group": "build",
			"args": []
		},
		{
			"label": "01 - gongc gongxsd -skipNg",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/go/models"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipNg"
			]
		},
		{
			"label": "01 - gongc gongxsd -skipGoModCommands",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/go/models"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipGoModCommands"
			]
		},
		{
			"label": "01 - gongc gongxsd -skipNg -skipGoModCommands",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/go/models"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipNg",
				"-skipGoModCommands"
			]
		},
		{
			"label": "01 - gongc gongxsd -clean",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/go/models"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-clean"
			]
		},
		{
			"label": "01 - gongc books -clean",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/books/go/models"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-clean"
			]
		},
		{
			"label": "00 - go mod vendor",
			"type": "shell",
			"group": "build",
			"command": "go mod vendor"
		},
		{
			"label": "00 - update dependencies",
			"type": "shell",
			"command": "go",
			"args": [
				"get",
				"-d",
				"github.com/fullstack-lang/gong@HEAD",
				"github.com/fullstack-lang/gongdoc@HEAD",
				"github.com/fullstack-lang/gongsvg@HEAD",
			],
			"group": "build"
		},
		{
			"label": "00 - go get -d github.com/fullstack-lang/gong@HEAD",
			"type": "shell",
			"command": "go",
			"args": [
				"get",
				"-d",
				"github.com/fullstack-lang/gong@HEAD",
				"github.com/fullstack-lang/gongdoc@HEAD",
				"github.com/fullstack-lang/gongrouter@HEAD",
				"github.com/fullstack-lang/gongsvg@HEAD",
				"github.com/fullstack-lang/gongtree@HEAD",
			],
			"group": "build"
		},
		{
			"label": "00 - go get -d github.com/fullstack-lang/gongdoc@HEAD",
			"type": "shell",
			"command": "go",
			"args": [
				"get",
				"-d",
				"github.com/fullstack-lang/gongdoc@HEAD",
			],
			"group": "build"
		},
		{
			"label": "00 - go mod tidy",
			"type": "shell",
			"command": "go",
			"args": [
				"mod",
				"tidy"
			],
			"group": "build"
		},
		{
			"label": "00 - go build",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/go/cmd/gongxsd"
			},
			"command": "go",
			"args": [
				"build"
			],
			"group": "build"
		},
		{
			"label": "01 - gongc books -skipNpmWorkspaces",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/books"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipNpmWorkspaces",
				"go/models",
			]
		},
		{
			"label": "01 - gongc books -skipNg -skipNpmWorkspaces",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/books"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipNpmWorkspaces",
				"-skipNg",
				"go/models",
			]
		},
		{
			"label": "02 - run books -unmarshallFromCode=stage.go -marshallOnCommit=stage",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/books/go/cmd/books"
			},
			"command": "go",
			"args": [
				"run",
				"main.go",
				"-diagrams",
				"-unmarshallFromCode=stage.go",
				"-marshallOnCommit=stage"
			],
			"group": "build"
		},
		{
			"label": "01 - gongc musicxml -skipNpmWorkspaces",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/musicxml"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipNpmWorkspaces",
				"go/models",
			]
		},
		{
			"label": "01 - gongc musicxml -skipNpmWorkspaces -skipNg -skipGoModCommands",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/musicxml"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipNpmWorkspaces",
				"-skipNg",
				"-skipGoModCommands",
				"go/models",
			]
		},
		{
			"label": "01 - gongc musicxml -clean",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/musicxml"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-clean",
				"go/models",
			]
		},
		{
			"label": "02 - run musicxml -unmarshallFromCode=stage.go -marshallOnCommit=stage",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/musicxml/go/cmd/musicxml"
			},
			"command": "go",
			"args": [
				"run",
				"main.go",
				"-diagrams",
				"-unmarshallFromCode=stage.go",
				"-marshallOnCommit=stage",
				"-musicxmlFile",
				"../../../MozaChloSample.musicxml"
			],
			"group": "build"
		},
		{
			"label": "01 - gongc alt -clean",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/go/models"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-clean"
			]
		},
		{
			"label": "01 - gongc alt -skipNpmWorkspaces",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/alt"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipNpmWorkspaces",
				"go/models",
			]
		},
		{
			"label": "01 - gongc alt -skipNg -skipNpmWorkspaces",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/alt"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipNpmWorkspaces",
				"-skipNg",
				"go/models",
			]
		},
		{
			"label": "01 - gongc reqif -skipNpmWorkspaces",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/reqif"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipNpmWorkspaces",
				"go/models",
			]
		},
		{
			"label": "01 - gongc reqif -skipNg -skipNpmWorkspaces",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/reqif"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-skipNpmWorkspaces",
				"-skipNg",
				"go/models",
			]
		},
		{
			"label": "01 - gongc reqif -clean",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/reqif/go/models"
			},
			"command": "gongc",
			"group": "build",
			"args": [
				"-clean"
			]
		},
		{
			"label": "02 - run reqif Sample.reqif -marshallOnCommit=stage",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/reqif/go/cmd/reqif"
			},
			"command": "go",
			"args": [
				"run",
				"main.go",
				"-diagrams",
				// "-unmarshallFromCode=stage.go",
				"-marshallOnCommit=stage",
				"-reqifFile",
				"../../../samples/Sample.reqif"
			],
			"group": "build"
		},
		{
			"label": "02 - run reqif Sample1.reqif -marshallOnCommit=stage",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/reqif/go/cmd/reqif"
			},
			"command": "go",
			"args": [
				"run",
				"main.go",
				"-diagrams",
				// "-unmarshallFromCode=stage.go",
				"-marshallOnCommit=stage",
				"-reqifFile",
				"../../../samples/Sample1.reqif"
			],
			"group": "build"
		},
		{
			"label": "02 - run reqif Sample2.reqif -marshallOnCommit=stage",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/reqif/go/cmd/reqif"
			},
			"command": "go",
			"args": [
				"run",
				"main.go",
				"-diagrams",
				// "-unmarshallFromCode=stage.go",
				"-marshallOnCommit=stage",
				"-reqifFile",
				"../../../samples/Sample2.reqif"
			],
			"group": "build"
		},
		{
			"label": "02 - run reqif Sample3.reqif -marshallOnCommit=stage",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/reqif/go/cmd/reqif"
			},
			"command": "go",
			"args": [
				"run",
				"main.go",
				"-diagrams",
				// "-unmarshallFromCode=stage.go",
				"-marshallOnCommit=stage",
				"-reqifFile",
				"../../../samples/Sample3.reqif"
			],
			"group": "build"
		},
		{
			"label": "02 - run reqif toto.reqif -marshallOnCommit=stage",
			"type": "shell",
			"options": {
				"cwd": "${workspaceFolder}/test/reqif/go/cmd/reqif"
			},
			"command": "go",
			"args": [
				"run",
				"main.go",
				"-diagrams",
				// "-unmarshallFromCode=stage.go",
				"-marshallOnCommit=stage",
				"-reqifFile",
				"../../../../../../../thomaspeugeot/toto.reqif"
			],
			"group": "build"
		},
	]
}